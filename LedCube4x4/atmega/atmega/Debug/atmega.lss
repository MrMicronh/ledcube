
atmega.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000019c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000220  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000260  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009cf  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000731  00000000  00000000  00000c87  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000042f  00000000  00000000  000013b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e8  00000000  00000000  000017e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003dc  00000000  00000000  000018d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000416  00000000  00000000  00001cac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  000020c2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 c3 00 	call	0x186	; 0x186 <main>
  78:	0c 94 cc 00 	jmp	0x198	; 0x198 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <push_data>:
		for(int i = 0; i<16;i = i+4){
			update_74hc595(temp1 >> i);
			_delay_ms(200);
		}
	}
}
  80:	88 b1       	in	r24, 0x08	; 8
  82:	8b 7f       	andi	r24, 0xFB	; 251
  84:	88 b9       	out	0x08, r24	; 8
  86:	88 b1       	in	r24, 0x08	; 8
  88:	84 60       	ori	r24, 0x04	; 4
  8a:	88 b9       	out	0x08, r24	; 8
  8c:	08 95       	ret

0000008e <latch_data>:
  8e:	88 b1       	in	r24, 0x08	; 8
  90:	8d 7f       	andi	r24, 0xFD	; 253
  92:	88 b9       	out	0x08, r24	; 8
  94:	88 b1       	in	r24, 0x08	; 8
  96:	82 60       	ori	r24, 0x02	; 2
  98:	88 b9       	out	0x08, r24	; 8
  9a:	08 95       	ret

0000009c <select_layer>:
  9c:	2b b1       	in	r18, 0x0b	; 11
  9e:	1b b8       	out	0x0b, r1	; 11
  a0:	82 30       	cpi	r24, 0x02	; 2
  a2:	91 05       	cpc	r25, r1
  a4:	71 f0       	breq	.+28     	; 0xc2 <select_layer+0x26>
  a6:	1c f4       	brge	.+6      	; 0xae <select_layer+0x12>
  a8:	01 97       	sbiw	r24, 0x01	; 1
  aa:	39 f0       	breq	.+14     	; 0xba <select_layer+0x1e>
  ac:	08 95       	ret
  ae:	83 30       	cpi	r24, 0x03	; 3
  b0:	91 05       	cpc	r25, r1
  b2:	59 f0       	breq	.+22     	; 0xca <select_layer+0x2e>
  b4:	04 97       	sbiw	r24, 0x04	; 4
  b6:	69 f0       	breq	.+26     	; 0xd2 <select_layer+0x36>
  b8:	08 95       	ret
  ba:	8b b1       	in	r24, 0x0b	; 11
  bc:	81 60       	ori	r24, 0x01	; 1
  be:	8b b9       	out	0x0b, r24	; 11
  c0:	08 95       	ret
  c2:	8b b1       	in	r24, 0x0b	; 11
  c4:	82 60       	ori	r24, 0x02	; 2
  c6:	8b b9       	out	0x0b, r24	; 11
  c8:	08 95       	ret
  ca:	8b b1       	in	r24, 0x0b	; 11
  cc:	84 60       	ori	r24, 0x04	; 4
  ce:	8b b9       	out	0x0b, r24	; 11
  d0:	08 95       	ret
  d2:	8b b1       	in	r24, 0x0b	; 11
  d4:	88 60       	ori	r24, 0x08	; 8
  d6:	8b b9       	out	0x0b, r24	; 11
  d8:	08 95       	ret

000000da <update_74hc595>:
  da:	0f 93       	push	r16
  dc:	1f 93       	push	r17
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29
  e2:	8c 01       	movw	r16, r24
  e4:	0e 94 47 00 	call	0x8e	; 0x8e <latch_data>
  e8:	c0 e0       	ldi	r28, 0x00	; 0
  ea:	d0 e0       	ldi	r29, 0x00	; 0
  ec:	0d c0       	rjmp	.+26     	; 0x108 <update_74hc595+0x2e>
  ee:	88 b1       	in	r24, 0x08	; 8
  f0:	90 2f       	mov	r25, r16
  f2:	91 70       	andi	r25, 0x01	; 1
  f4:	89 2b       	or	r24, r25
  f6:	88 b9       	out	0x08, r24	; 8
  f8:	0e 94 40 00 	call	0x80	; 0x80 <push_data>
  fc:	15 95       	asr	r17
  fe:	07 95       	ror	r16
 100:	88 b1       	in	r24, 0x08	; 8
 102:	8e 7f       	andi	r24, 0xFE	; 254
 104:	88 b9       	out	0x08, r24	; 8
 106:	21 96       	adiw	r28, 0x01	; 1
 108:	c0 31       	cpi	r28, 0x10	; 16
 10a:	d1 05       	cpc	r29, r1
 10c:	84 f3       	brlt	.-32     	; 0xee <update_74hc595+0x14>
 10e:	0e 94 47 00 	call	0x8e	; 0x8e <latch_data>
 112:	df 91       	pop	r29
 114:	cf 91       	pop	r28
 116:	1f 91       	pop	r17
 118:	0f 91       	pop	r16
 11a:	08 95       	ret

0000011c <display_led1>:
 11c:	ef 92       	push	r14
 11e:	ff 92       	push	r15
 120:	0f 93       	push	r16
 122:	1f 93       	push	r17
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	8c 01       	movw	r16, r24
 12a:	ee 24       	eor	r14, r14
 12c:	e3 94       	inc	r14
 12e:	f1 2c       	mov	r15, r1
 130:	1f c0       	rjmp	.+62     	; 0x170 <display_led1+0x54>
 132:	c7 01       	movw	r24, r14
 134:	0e 94 4e 00 	call	0x9c	; 0x9c <select_layer>
 138:	c0 e0       	ldi	r28, 0x00	; 0
 13a:	d0 e0       	ldi	r29, 0x00	; 0
 13c:	13 c0       	rjmp	.+38     	; 0x164 <display_led1+0x48>
 13e:	c8 01       	movw	r24, r16
 140:	0c 2e       	mov	r0, r28
 142:	02 c0       	rjmp	.+4      	; 0x148 <display_led1+0x2c>
 144:	96 95       	lsr	r25
 146:	87 95       	ror	r24
 148:	0a 94       	dec	r0
 14a:	e2 f7       	brpl	.-8      	; 0x144 <display_led1+0x28>
 14c:	0e 94 6d 00 	call	0xda	; 0xda <update_74hc595>
 150:	8f ef       	ldi	r24, 0xFF	; 255
 152:	93 ec       	ldi	r25, 0xC3	; 195
 154:	29 e0       	ldi	r18, 0x09	; 9
 156:	81 50       	subi	r24, 0x01	; 1
 158:	90 40       	sbci	r25, 0x00	; 0
 15a:	20 40       	sbci	r18, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <display_led1+0x3a>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <display_led1+0x44>
 160:	00 00       	nop
 162:	21 96       	adiw	r28, 0x01	; 1
 164:	c0 31       	cpi	r28, 0x10	; 16
 166:	d1 05       	cpc	r29, r1
 168:	54 f3       	brlt	.-44     	; 0x13e <display_led1+0x22>
 16a:	8f ef       	ldi	r24, 0xFF	; 255
 16c:	e8 1a       	sub	r14, r24
 16e:	f8 0a       	sbc	r15, r24
 170:	95 e0       	ldi	r25, 0x05	; 5
 172:	e9 16       	cp	r14, r25
 174:	f1 04       	cpc	r15, r1
 176:	ec f2       	brlt	.-70     	; 0x132 <display_led1+0x16>
 178:	df 91       	pop	r29
 17a:	cf 91       	pop	r28
 17c:	1f 91       	pop	r17
 17e:	0f 91       	pop	r16
 180:	ff 90       	pop	r15
 182:	ef 90       	pop	r14
 184:	08 95       	ret

00000186 <main>:

int main (void)
{
	DDRD = 0xFF;
 186:	8f ef       	ldi	r24, 0xFF	; 255
 188:	8a b9       	out	0x0a, r24	; 10
	DDRC = 0xFF; 
 18a:	87 b9       	out	0x07, r24	; 7
	PORTC = 0;
 18c:	18 b8       	out	0x08, r1	; 8
	//uint16_t temp1 = 0x8000;
	uint16_t temp2 = 0xF000;
	while(1)
	{	
		 display_led1( temp2);
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	90 ef       	ldi	r25, 0xF0	; 240
 192:	0e 94 8e 00 	call	0x11c	; 0x11c <display_led1>
 196:	fb cf       	rjmp	.-10     	; 0x18e <main+0x8>

00000198 <_exit>:
 198:	f8 94       	cli

0000019a <__stop_program>:
 19a:	ff cf       	rjmp	.-2      	; 0x19a <__stop_program>
